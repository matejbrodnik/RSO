namespace: rso
imagePullSecrets:
  name: dockerhub-secret
env:
  - name: DB_HOST
    secretName: azure-sql-credentials
    key: db-host
  - name: DB_USER
    secretName: azure-sql-credentials
    key: db-user
  - name: DB_PASSWORD
    secretName: azure-sql-credentials
    key: db-password
  - name: DB_NAME
    secretName: azure-sql-credentials
    key: db-name

frontend:
  name: rsof
  replicas: 3
  image:
    repository: matejbrodnik/rsof
    tag: latest
    pullPolicy: Always
  port: 5174

frontend_service:
  name: rsofs
  protocol: TCP
  port: 80

backend_auth:
  name: rsoa
  replicas: 3
  image:
    repository: matejbrodnik/rsoa
    tag: latest
    pullPolicy: Always
  port: 4000
  livenessProbe:
    path: "/health"
    initialDelaySeconds: 5
    periodSeconds: 15
    timeoutSeconds: 1
    failureThreshold: 2
  readinessProbe:
    path: "/ready"
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 2
    failureThreshold: 2
  # scrape: "true"
  # path: "/metrics"

backend_auth_service:
  name: rsoas
  protocol: TCP
  port: 80

backend_geo:
  name: rsog
  replicas: 3
  image:
    repository: matejbrodnik/rsog
    tag: latest
    pullPolicy: Always
  port: 4001
  livenessProbe:
    path: "/health"
    initialDelaySeconds: 5
    periodSeconds: 15
    timeoutSeconds: 1
    failureThreshold: 2
  readinessProbe:
    path: "/ready"
    initialDelaySeconds: 10
    periodSeconds: 15
    timeoutSeconds: 2
    failureThreshold: 2

backend_geo_service:
  name: rsogs
  protocol: TCP
  port: 80

backend_weather:
  name: rsow
  replicas: 3
  image:
    repository: matejbrodnik/rsow
    tag: latest
    pullPolicy: Always
  port: 4002
  livenessProbe:
    path: "/health"
    initialDelaySeconds: 5
    periodSeconds: 15
    timeoutSeconds: 1
    failureThreshold: 2

backend_weather_service:
  name: rsows
  protocol: TCP
  port: 80